import { arraySkills, arrayProjects } from './arraySkills.js';

const translations = {
  en: {
    greeting: 'üëã Daniil [RestlessByte]',
    role: 'üéì Student | üë®üèΩ‚Äçüíª Developer | üîÆ Tech Enthusiast | üß† AI-CODER',
    location: 'üìç <b>Bashkortostan, Russia | Remote</b>',
    paymentLabel: 'üí∏ USDT Payment Address:',
    copy: 'Copy',
    copied: 'Copied!',
    payMetamask: 'Pay with MetaMask',
    skillsTitle: 'MY SKILLS',
    projectsTitle: 'üéØ Projects',
    connectTitle: "üîó Let's Connect!",
    seoTitle: 'üöÄ Portfolio & SEO',
    seoText:
      'Daniil (RestlessByte) builds efficient web and AI solutions using JavaScript, TypeScript and Linux. Explore cutting-edge projects and open-source contributions crafted with attention to detail.',
    footer: 'Built with ‚ù§Ô∏è and code.',
    githubView: 'VIEW ON MY GITHUB, TO SEE MY OTHER PROJECTS',
    enter: 'Enter',
    navProfile: 'About',
    navProjects: 'My Projects',
    languageButton: 'Change language',
    profileChip: 'FullStack Developer ‚Ä¢ AI Coder ‚Ä¢ Security Specialist',
    profilePill: 'I love sleeping',
    contactsTitle: 'Contacts',
    walletTitle: 'Wallet',
    projectsSubheading: 'Projects',
    quotesSubheading: 'Quotes',
    quote1: '‚ÄúStrive for the impossible.‚Äù',
    quote2: '‚ÄúWe know ‚Äî that we know nothing. (Socrates)‚Äù',
    projectAiHub:
      '<strong>AI Hub</strong> ‚Äî Platform to create and manage neural Telegram bots: multi-model routing, secure tokens, role presets.',
    projectGitZipQR:
      '<strong>GitZipQR</strong> ‚Äî Encrypted offline data transfer via QR-codes (AES-256-GCM, scrypt KDF, chunking, integrity checks).'
  },
  ru: {
    greeting: 'üëã –î–∞–Ω–∏–∏–ª [RestlessByte]',
    role: 'üéì –°—Ç—É–¥–µ–Ω—Ç | üë®üèΩ‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ | üîÆ –¢–µ—Ö —ç–Ω—Ç—É–∑–∏–∞—Å—Ç | üß† AI-–ö–û–î–ï–†',
    location: 'üìç <b>–ë–∞—à–∫–æ—Ä—Ç–æ—Å—Ç–∞–Ω, –†–æ—Å—Å–∏—è | –£–¥–∞–ª—ë–Ω–Ω–æ</b>',
    paymentLabel: 'üí∏ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã USDT:',
    copy: '–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å',
    copied: '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!',
    payMetamask: '–û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ MetaMask',
    skillsTitle: '–ú–û–ò –ù–ê–í–´–ö–ò',
    projectsTitle: 'üéØ –ü—Ä–æ–µ–∫—Ç—ã',
    connectTitle: 'üîó –°–≤—è–∂–µ–º—Å—è!',
    seoTitle: 'üöÄ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∏ SEO',
    seoText:
      '–î–∞–Ω–∏–∏–ª (RestlessByte) —Å–æ–∑–¥–∞—ë—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –≤–µ–± –∏ AI-—Ä–µ—à–µ–Ω–∏—è –Ω–∞ JavaScript, TypeScript –∏ Linux. –ò—Å—Å–ª–µ–¥—É–π—Ç–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –≤–∫–ª–∞–¥ –≤ open-source, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º.',
    footer: '–°–æ–∑–¥–∞–Ω–æ —Å ‚ù§Ô∏è –∏ –∫–æ–¥–æ–º.',
    githubView: '–°–ú–û–¢–†–ò–¢–ï –ù–ê –ú–û–Å–ú GITHUB, –ß–¢–û–ë–´ –£–í–ò–î–ï–¢–¨ –î–†–£–ì–ò–ï –ü–†–û–ï–ö–¢–´',
    enter: '–ü–µ—Ä–µ–π—Ç–∏',
    navProfile: '–û–±–æ –º–Ω–µ',
    navProjects: '–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã',
    languageButton: '–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫',
    profileChip: 'FullStack-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ ‚Ä¢ AI-–∫–æ–¥–µ—Ä ‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
    profilePill: '–õ—é–±–ª—é —Å–ø–∞—Ç—å',
    contactsTitle: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
    walletTitle: '–ö–æ—à–µ–ª—ë–∫',
    projectsSubheading: '–ü—Ä–æ–µ–∫—Ç—ã',
    quotesSubheading: '–¶–∏—Ç–∞—Ç—ã',
    quote1: '¬´–°—Ç—Ä–µ–º–∏—Å—å –∫ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–º—É.¬ª',
    quote2: '¬´–ú—ã –∑–Ω–∞–µ–º, —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞–µ–º. (–°–æ–∫—Ä–∞—Ç)¬ª',
    projectAiHub:
      '<strong>AI Hub</strong> ‚Äî –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ–π—Ä–æ–Ω–Ω—ã–º–∏ Telegram-–±–æ—Ç–∞–º–∏: –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π, –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã, –ø—Ä–µ—Å–µ—Ç—ã —Ä–æ–ª–µ–π.',
    projectGitZipQR:
      '<strong>GitZipQR</strong> ‚Äî –û—Ñ—Ñ–ª–∞–π–Ω-–ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ QR-–∫–æ–¥—ã (AES-256-GCM, scrypt, —á–∞–Ω–∫–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏).'
  }
};

const sharedInfoBlocks = [
  {
    title: { en: 'üëª Work conditions', ru: 'üëª –£—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã' },
    items: [
      { en: 'I work politely, clearly and safely.', ru: '–†–∞–±–æ—Ç–∞—é –≤–µ–∂–ª–∏–≤–æ, —á—ë—Ç–∫–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ.' },
      { en: 'Online: SSH / GitHub / AnyDesk.', ru: '–û–Ω–ª–∞–π–Ω: SSH / GitHub / AnyDesk.' },
      { en: 'Offline: at your place or you can deliver the device to me.', ru: '–û—Ñ–ª–∞–π–Ω: —É –≤–∞—Å –¥–æ–º–∞ –∏–ª–∏ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∫–æ –º–Ω–µ.' },
      { en: 'Call-out without providing a service ‚Äî 1,000 ‚ÇΩ.', ru: '–í—ã–∑–æ–≤ –±–µ–∑ –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏ ‚Äî 1.000 ‚ÇΩ.' }
    ]
  },
  {
    title: { en: 'üí≥ Payment options', ru: 'üí≥ –û–ø–ª–∞—Ç–∞' },
    items: [
      { en: 'üíµ Cash', ru: 'üíµ –ù–∞–ª–∏—á–Ω—ã–µ' },
      { en: 'üí≥ Bank transfer', ru: 'üí≥ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É' },
      { en: '‚Çø Crypto (USDT)', ru: '‚Çø –ö—Ä–∏–ø—Ç–∞ (USDT)' },
      { en: '‚öñÔ∏è For companies ‚Äî full paperwork available.', ru: '‚öñÔ∏è –î–ª—è –∫–æ–º–ø–∞–Ω–∏–π ‚Äî —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –æ–ø–ª–∞—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.' }
    ]
  },
  {
    title: { en: 'üîÆ Why hire me', ru: 'üîÆ –ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ —è' },
    items: [
      {
        en: 'I am a programmer and developer, not just a ‚ÄúWindows reinstaller‚Äù.',
        ru: '–Ø ‚Äî –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ ¬´–ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –≤–∏–Ω–¥—ã¬ª.'
      },
      { en: 'I always explain what was done and how to use it further.', ru: '–í—Å–µ–≥–¥–∞ –æ–±—ä—è—Å–Ω—è—é, —á—Ç–æ —Å–¥–µ–ª–∞–ª –∏ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ.' },
      { en: 'Portfolio is open and transparent.', ru: '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –æ—Ç–∫—Ä—ã—Ç–æ.' }
    ]
  }
];

const contactsBlock = {
  title: { en: 'Employer contacts', ru: '–ö–æ–Ω—Ç–∞–∫—Ç—ã —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è' },
  note: {
    en: 'Please message the Telegram bot first ‚Äî I have many channels and it helps to keep requests organised.',
    ru: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç-–±–æ—Ç ‚Äî –∫–∞–Ω–∞–ª–æ–≤ –º–Ω–æ–≥–æ, —Ç–∞–∫ –ø—Ä–æ—â–µ –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –∑–∞—è–≤–∫—É.'
  },
  items: [
    {
      label: { en: 'Telegram bot', ru: 'Telegram —á–∞—Ç-–±–æ—Ç' },
      display: 'https://t.me/reportRestlessByte_bot',
      url: 'https://t.me/reportRestlessByte_bot'
    },
    {
      label: { en: 'Telegram account', ru: 'Telegram –∞–∫–∫–∞—É–Ω—Ç' },
      display: 'https://t.me/RestlessByte',
      url: 'https://t.me/RestlessByte'
    }
  ]
};

const serviceContent = {
  online: {
    title: { en: 'üíª Online Services', ru: 'üíª –û–Ω–ª–∞–π–Ω —É—Å–ª—É–≥–∏' },
    categories: [
      {
        title: { en: 'Main services', ru: '–û—Å–Ω–æ–≤–Ω—ã–µ —É—Å–ª—É–≥–∏' },
        items: [
          {
            icon: 'ü™ü',
            name: { en: 'Windows 10/11 installation support', ru: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows 10/11' },
            price: { en: '1,300 ‚ÇΩ', ru: '1.300 ‚ÇΩ' },
            details: {
              en: 'Remote session via AnyDesk: clean install, drivers and post-install tuning.',
              ru: '–£–¥–∞–ª—ë–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è —á–µ—Ä–µ–∑ AnyDesk: —á–∏—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞, –¥—Ä–∞–π–≤–µ—Ä—ã –∏ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.'
            }
          },
          {
            icon: 'üíø',
            name: { en: 'Windows 7/8 installation support', ru: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows 7/8' },
            price: { en: 'from 3,500 ‚ÇΩ', ru: '–æ—Ç 3.500 ‚ÇΩ' },
            details: {
              en: 'Legacy hardware care, manual driver hunt and activation guidance.',
              ru: '–°–ª–æ–∂–Ω–æ–µ —É—Å—Ç–∞—Ä–µ–≤—à–µ–µ –∂–µ–ª–µ–∑–æ, —Ä—É—á–Ω–æ–π –ø–æ–∏—Å–∫ –¥—Ä–∞–π–≤–µ—Ä–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.'
            }
          },
          {
            icon: 'üß©',
            name: { en: 'Software installation & rollout', ru: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º' },
            price: { en: 'from 500 ‚ÇΩ', ru: '–æ—Ç 500 ‚ÇΩ' },
            details: {
              en: 'Remote package deployment. When the environment is ready ‚Äî from 50 ‚ÇΩ per app.',
              ru: '–£–¥–∞–ª—ë–Ω–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤. –ï—Å–ª–∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ –≥–æ—Ç–æ–≤–æ ‚Äî –æ—Ç 50 ‚ÇΩ –∑–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É.'
            }
          },
          {
            icon: 'üì°',
            name: { en: 'Router & Wi-Fi hardening', ru: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—É—Ç–µ—Ä–æ–≤ –∏ Wi‚ÄëFi' },
            price: { en: 'from 1,000 ‚ÇΩ', ru: '–æ—Ç 1.000 ‚ÇΩ' },
            details: {
              en: 'Secure Wi-Fi, guest networks and firewall rules. Extended protection from 3,500 ‚ÇΩ.',
              ru: '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π Wi‚ÄëFi, –≥–æ—Å—Ç–µ–≤—ã–µ —Å–µ—Ç–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞ firewall. –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ ‚Äî –æ—Ç 3.500 ‚ÇΩ.'
            }
          },
          {
            icon: 'ü§ñ',
            name: { en: 'Chatbot development (Telegram/VK)', ru: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Ç-–±–æ—Ç–æ–≤ (Telegram/VK)' },
            price: { en: 'from 3,000 ‚ÇΩ', ru: '–æ—Ç 3.000 ‚ÇΩ' },
            details: {
              en: 'Scenario scripting, hosting, integrations and analytics dashboards.',
              ru: '–°—Ü–µ–Ω–∞—Ä–∏–∏, —Ö–æ—Å—Ç–∏–Ω–≥, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞.'
            }
          },
          {
            icon: 'üåê',
            name: { en: 'Website creation', ru: '–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–æ–≤' },
            price: { en: 'from 20,000 ‚ÇΩ', ru: '–æ—Ç 20.000 ‚ÇΩ' },
            details: {
              en: 'Builder-based sites or custom NextJS + PostgreSQL solutions from 50,000 ‚ÇΩ.',
              ru: '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –∏–ª–∏ —Å–∞–º–æ–ø–∏—Å–Ω—ã–µ NextJS + PostgreSQL —Ä–µ—à–µ–Ω–∏—è –æ—Ç 50.000 ‚ÇΩ.'
            }
          },
          {
            icon: 'üóÇÔ∏è',
            name: { en: 'Data migration & sync', ru: '–ü–µ—Ä–µ–Ω–æ—Å –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö' },
            price: { en: 'from 500 ‚ÇΩ / 5 GB', ru: '–æ—Ç 500 ‚ÇΩ –∑–∞ 5 –ì–ë' },
            details: {
              en: 'Secure copy, checksum verification and structure preservation.',
              ru: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö —Å—É–º–º –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.'
            }
          },
          {
            icon: 'üõ°Ô∏è',
            name: { en: 'Confidential backups', ru: '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –±—ç–∫–∞–ø—ã' },
            price: { en: '500 ‚ÇΩ / GB', ru: '500 ‚ÇΩ/–ì–ë' },
            details: {
              en: 'Single drive? I build an encrypted archive for secure storage.',
              ru: '–ï—Å–ª–∏ –¥–∏—Å–∫ –æ–¥–∏–Ω ‚Äî —Å–æ–±–∏—Ä–∞—é –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è.'
            }
          },
          {
            icon: 'üì±',
            name: { en: 'Phone setup & onboarding', ru: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤' },
            price: { en: 'from 1,000 ‚ÇΩ', ru: '–æ—Ç 1.000 ‚ÇΩ' },
            details: {
              en: 'Mail, messengers, sync and security policies ready to go.',
              ru: '–ü–æ—á—Ç–∞, –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏ –ø–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.'
            }
          }
        ]
      },
      {
        title: { en: 'Additional services', ru: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏' },
        items: [
          {
            icon: 'üìÇ',
            name: { en: 'Driver installation', ru: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–æ–≤' },
            price: { en: '50 ‚ÇΩ / item', ru: '50 ‚ÇΩ/—à—Ç.' },
            details: {
              en: 'Remote detection, download mirrors and silent install.',
              ru: '–£–¥–∞–ª—ë–Ω–Ω—ã–π –ø–æ–¥–±–æ—Ä, —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ —Ç–∏—Ö–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞.'
            }
          },
          {
            icon: '‚öôÔ∏è',
            name: { en: 'Windows optimisation', ru: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows' },
            price: { en: 'from 100 ‚ÇΩ', ru: '–æ—Ç 100 ‚ÇΩ' },
            details: {
              en: 'Services cleanup, privacy and performance tuning.',
              ru: '–ß–∏—Å—Ç–∫–∞ —Å–ª—É–∂–±, –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.'
            }
          },
          {
            icon: 'üîí',
            name: { en: 'Antivirus & security setup', ru: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞ –∏ –∑–∞—â–∏—Ç—ã' },
            price: { en: 'from 300 ‚ÇΩ', ru: '–æ—Ç 300 ‚ÇΩ' },
            details: {
              en: 'Policies, scheduled scans and safe-browsing tweaks.',
              ru: '–ü–æ–ª–∏—Ç–∏–∫–∏, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–∫–∞–Ω–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤–µ–±-—Å—ë—Ä—Ñ–∏–Ω–≥–∞.'
            }
          },
          {
            icon: 'üì°',
            name: { en: 'Remote access configuration', ru: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞' },
            price: { en: 'from 500 ‚ÇΩ', ru: '–æ—Ç 500 ‚ÇΩ' },
            details: {
              en: 'VPN, RDP, SSH tunnels with hardened profiles.',
              ru: 'VPN, RDP, SSH-—Ç–æ–Ω–Ω–µ–ª–∏ —Å —É—Å–∏–ª–µ–Ω–Ω–æ–π –∑–∞—â–∏—Ç–æ–π.'
            }
          },
          {
            icon: 'üßπ',
            name: { en: 'PC / laptop cleaning guidance', ru: '–ß–∏—Å—Ç–∫–∞ –ü–ö/–Ω–æ—É—Ç–±—É–∫–∞' },
            price: { en: 'from 700 ‚ÇΩ', ru: '–æ—Ç 700 ‚ÇΩ' },
            details: {
              en: 'Step-by-step remote assistance for dust removal and thermal paste renewal.',
              ru: '–ü–æ—à–∞–≥–æ–≤–∞—è —É–¥–∞–ª—ë–Ω–Ω–∞—è –ø–æ–º–æ—â—å –ø–æ —á–∏—Å—Ç–∫–µ –∏ –∑–∞–º–µ–Ω–µ —Ç–µ—Ä–º–æ–ø–∞—Å—Ç—ã.'
            }
          },
          {
            icon: 'üì±',
            name: { en: 'Account recovery', ru: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤' },
            price: { en: 'from 500 ‚ÇΩ', ru: '–æ—Ç 500 ‚ÇΩ' },
            details: {
              en: 'Google, Apple ID, social media with security review.',
              ru: 'Google, Apple ID, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.'
            }
          },
          {
            icon: 'üõ†Ô∏è',
            name: { en: 'Custom requests', ru: '–î—Ä—É–≥–∏–µ –∑–∞–¥–∞—á–∏' },
            price: { en: 'On request', ru: '–ü–æ –∑–∞–ø—Ä–æ—Å—É' },
            details: {
              en: 'Describe the task ‚Äî I will propose a safe and efficient solution.',
              ru: '–û–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É ‚Äî –ø—Ä–µ–¥–ª–æ–∂—É –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.'
            }
          }
        ]
      }
    ],
    infoBlocks: sharedInfoBlocks,
    contacts: contactsBlock
  },
  offline: {
    title: { en: 'üõ†Ô∏è Offline Services', ru: 'üõ†Ô∏è –û—Ñ—Ñ–ª–∞–π–Ω —É—Å–ª—É–≥–∏' },
    categories: [
      {
        title: { en: 'Main services', ru: '–û—Å–Ω–æ–≤–Ω—ã–µ —É—Å–ª—É–≥–∏' },
        items: [
          {
            icon: 'üñ•Ô∏è',
            name: { en: 'Windows 10/11 installation', ru: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows 10/11' },
            price: { en: '1,300 ‚ÇΩ', ru: '1.300 ‚ÇΩ' },
            details: {
              en: 'On-site clean install, drivers, activation and basic software.',
              ru: '–ß–∏—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ –º–µ—Å—Ç–µ, –¥—Ä–∞–π–≤–µ—Ä—ã, –∞–∫—Ç–∏–≤–∞—Ü–∏—è –∏ –±–∞–∑–æ–≤—ã–π —Å–æ—Ñ—Ç.'
            }
          },
          {
            icon: 'üíø',
            name: { en: 'Windows 7/8 installation', ru: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows 7/8' },
            price: { en: 'from 3,500 ‚ÇΩ', ru: '–æ—Ç 3.500 ‚ÇΩ' },
            details: {
              en: 'Legacy hardware, rare drivers and fine-tuning included.',
              ru: '–£—Å—Ç–∞—Ä–µ–≤—à–µ–µ –∂–µ–ª–µ–∑–æ, –ø–æ–∏—Å–∫ —Ä–µ–¥–∫–∏—Ö –¥—Ä–∞–π–≤–µ—Ä–æ–≤ –∏ —Ç–æ–Ω–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.'
            }
          },
          {
            icon: 'üß©',
            name: { en: 'Software installation', ru: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º' },
            price: { en: 'from 500 ‚ÇΩ', ru: '–æ—Ç 500 ‚ÇΩ' },
            details: {
              en: 'Full software pack on-site. If everything is prepped ‚Äî from 50 ‚ÇΩ per app.',
              ru: '–ü–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç —Å–æ—Ñ—Ç–∞ –Ω–∞ –º–µ—Å—Ç–µ. –ï—Å–ª–∏ –≤—Å—ë –≥–æ—Ç–æ–≤–æ ‚Äî –æ—Ç 50 ‚ÇΩ –∑–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É.'
            }
          },
          {
            icon: 'üì°',
            name: { en: 'Router & Wi-Fi setup', ru: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—É—Ç–µ—Ä–æ–≤ –∏ Wi‚ÄëFi' },
            price: { en: 'from 1,000 ‚ÇΩ', ru: '–æ—Ç 1.000 ‚ÇΩ' },
            details: {
              en: 'Tidy cabling, guest networks and extended protection from 3,500 ‚ÇΩ.',
              ru: '–ê–∫–∫—É—Ä–∞—Ç–Ω–∞—è —Ä–∞–∑–≤–æ–¥–∫–∞, –≥–æ—Å—Ç–µ–≤—ã–µ —Å–µ—Ç–∏ –∏ —É—Å–∏–ª–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç 3.500 ‚ÇΩ.'
            }
          },
          {
            icon: 'ü§ñ',
            name: { en: 'Chatbot development (Telegram/VK)', ru: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Ç-–±–æ—Ç–æ–≤ (Telegram/VK)' },
            price: { en: 'from 3,000 ‚ÇΩ', ru: '–æ—Ç 3.000 ‚ÇΩ' },
            details: {
              en: 'Strategy session, deployment and handover in person.',
              ru: '–û—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è, —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–æ–µ–∫—Ç–∞.'
            }
          },
          {
            icon: 'üåê',
            name: { en: 'Website creation', ru: '–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–æ–≤' },
            price: { en: 'from 20,000 ‚ÇΩ', ru: '–æ—Ç 20.000 ‚ÇΩ' },
            details: {
              en: 'Builder-based launch or custom NextJS + PostgreSQL from 50,000 ‚ÇΩ.',
              ru: '–ó–∞–ø—É—Å–∫ –Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –∏–ª–∏ —Å–∞–º–æ–ø–∏—Å –Ω–∞ NextJS + PostgreSQL –æ—Ç 50.000 ‚ÇΩ.'
            }
          },
          {
            icon: 'üóÇÔ∏è',
            name: { en: 'Data transfer & cloning', ru: '–ü–µ—Ä–µ–Ω–æ—Å –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö' },
            price: { en: 'from 500 ‚ÇΩ / 5 GB', ru: '–æ—Ç 500 ‚ÇΩ –∑–∞ 5 –ì–ë' },
            details: {
              en: 'Careful copying with verification and safe storage.',
              ru: '–ê–∫–∫—É—Ä–∞—Ç–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º.'
            }
          },
          {
            icon: 'üõ°Ô∏è',
            name: { en: 'Confidential backups', ru: '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –±—ç–∫–∞–ø—ã' },
            price: { en: '500 ‚ÇΩ / GB', ru: '500 ‚ÇΩ/–ì–ë' },
            details: {
              en: 'If there is only one disk, I create a separate encrypted archive.',
              ru: '–ï—Å–ª–∏ –¥–∏—Å–∫ –æ–¥–∏–Ω ‚Äî –¥–µ–ª–∞—é –æ—Ç–¥–µ–ª—å–Ω—ã–π –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤.'
            }
          },
          {
            icon: 'üì±',
            name: { en: 'Phone configuration', ru: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤' },
            price: { en: 'from 1,000 ‚ÇΩ', ru: '–æ—Ç 1.000 ‚ÇΩ' },
            details: {
              en: 'Apps, mail, backups and user training.',
              ru: '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø–æ—á—Ç–∞, –±—ç–∫–∞–ø—ã –∏ –æ–±—É—á–µ–Ω–∏–µ.'
            }
          },
          {
            icon: 'üîå',
            name: { en: 'RJ-45 twisted pair crimping', ru: '–û–±–∂–∞—Ç–∏–µ –≤–∏—Ç–æ–π –ø–∞—Ä—ã RJ-45' },
            price: { en: '1,900 ‚ÇΩ', ru: '1.900 ‚ÇΩ' },
            details: {
              en: 'Bring tools, crimp the cable, test with a tracer and tune the network.',
              ru: '–ü—Ä–∏–≤–æ–∂—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –æ–±–∂–∏–º–∞—é –∫–∞–±–µ–ª—å, –ø—Ä–æ–≤–µ—Ä—è—é —Ç—Ä–∞—Å—Å–µ—Ä–æ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é —Å–µ—Ç—å.'
            }
          }
        ]
      },
      {
        title: { en: 'Additional services', ru: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏' },
        items: [
          {
            icon: 'üìÇ',
            name: { en: 'Driver installation', ru: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–æ–≤' },
            price: { en: '50 ‚ÇΩ / item', ru: '50 ‚ÇΩ/—à—Ç.' },
            details: {
              en: 'Bring the full driver pack and install everything locally.',
              ru: '–ü—Ä–∏–≤–æ–∂—É –ø–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç –¥—Ä–∞–π–≤–µ—Ä–æ–≤ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∏—Ö –Ω–∞ –º–µ—Å—Ç–µ.'
            }
          },
          {
            icon: '‚öôÔ∏è',
            name: { en: 'Windows optimisation', ru: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows' },
            price: { en: 'from 100 ‚ÇΩ', ru: '–æ—Ç 100 ‚ÇΩ' },
            details: {
              en: 'Cleaning dust, trimming autoload and setting up services.',
              ru: '–ß–∏—Å—Ç–∫–∞ –º—É—Å–æ—Ä–∞, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –∏ —Å–ª—É–∂–±.'
            }
          },
          {
            icon: 'üîí',
            name: { en: 'Antivirus & security setup', ru: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞ –∏ –∑–∞—â–∏—Ç—ã' },
            price: { en: 'from 300 ‚ÇΩ', ru: '–æ—Ç 300 ‚ÇΩ' },
            details: {
              en: 'Install protection, configure policies and train the user.',
              ru: '–°—Ç–∞–≤–ª—é –∑–∞—â–∏—Ç—É, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é –ø–æ–ª–∏—Ç–∏–∫–∏ –∏ –æ–±—É—á–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.'
            }
          },
          {
            icon: 'üì°',
            name: { en: 'Remote access configuration', ru: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞' },
            price: { en: 'from 500 ‚ÇΩ', ru: '–æ—Ç 500 ‚ÇΩ' },
            details: {
              en: 'Set up VPN, RDP or SSH with strong encryption on your hardware.',
              ru: '–ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é VPN, RDP –∏–ª–∏ SSH —Å —Å–∏–ª—å–Ω—ã–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º –Ω–∞ –≤–∞—à–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏.'
            }
          },
          {
            icon: 'üßπ',
            name: { en: 'PC / laptop cleaning', ru: '–ß–∏—Å—Ç–∫–∞ –ü–ö/–Ω–æ—É—Ç–±—É–∫–∞' },
            price: { en: 'from 700 ‚ÇΩ', ru: '–æ—Ç 700 ‚ÇΩ' },
            details: {
              en: 'Disassemble, remove dust and refresh thermal paste.',
              ru: '–†–∞–∑–±–∏—Ä–∞—é, —É–¥–∞–ª—è—é –ø—ã–ª—å –∏ –æ–±–Ω–æ–≤–ª—è—é —Ç–µ—Ä–º–æ–ø–∞—Å—Ç—É.'
            }
          },
          {
            icon: 'üì±',
            name: { en: 'Account recovery', ru: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤' },
            price: { en: 'from 500 ‚ÇΩ', ru: '–æ—Ç 500 ‚ÇΩ' },
            details: {
              en: 'Recover Google, Apple ID or social accounts with secure handover.',
              ru: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Google, Apple ID –∏–ª–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–µ–π.'
            }
          },
          {
            icon: 'üõ†Ô∏è',
            name: { en: 'Custom requests', ru: '–î—Ä—É–≥–∏–µ –∑–∞–¥–∞—á–∏' },
            price: { en: 'On request', ru: '–ü–æ –∑–∞–ø—Ä–æ—Å—É' },
            details: {
              en: 'Bring any tech challenge ‚Äî we will solve it together.',
              ru: '–õ—é–±—ã–µ –∑–∞–¥–∞—á–∏ –ø–æ —Ç–µ—Ö–Ω–∏–∫–µ ‚Äî —Ä–µ—à–∏–º –≤–º–µ—Å—Ç–µ.'
            }
          }
        ]
      }
    ],
    infoBlocks: sharedInfoBlocks,
    contacts: contactsBlock
  }
};

let currentLang = 'en';
const urlParams = new URLSearchParams(window.location.search);
let currentServiceMode = urlParams.get('service') === 'offline' ? 'offline' : 'online';

const updateServiceTabs = () => {
  const onlineTab = document.getElementById('services-tab-online');
  const offlineTab = document.getElementById('services-tab-offline');

  if (onlineTab) {
    onlineTab.textContent = getLocalizedText(serviceContent.online.title, currentLang);
    onlineTab.classList.toggle('active', currentServiceMode === 'online');
    if (currentServiceMode === 'online') {
      onlineTab.setAttribute('aria-current', 'page');
    } else {
      onlineTab.removeAttribute('aria-current');
    }
  }

  if (offlineTab) {
    offlineTab.textContent = getLocalizedText(serviceContent.offline.title, currentLang);
    offlineTab.classList.toggle('active', currentServiceMode === 'offline');
    if (currentServiceMode === 'offline') {
      offlineTab.setAttribute('aria-current', 'page');
    } else {
      offlineTab.removeAttribute('aria-current');
    }
  }
};

const getLocalizedText = (value, lang) => {
  if (typeof value === 'string') return value;
  if (!value) return '';
  return value[lang] ?? value.en ?? value.ru ?? '';
};

const renderSkills = () => {
  const skillsContainer = document.getElementById('skillsContainer');
  if (!skillsContainer) return;
  skillsContainer.innerHTML = '';
  arraySkills.forEach(skillCategory => {
    const skillCard = document.createElement('div');
    skillCard.className = 'tech-stack-card';

    const titleElement = document.createElement('span');
    titleElement.className = 'tech-stack-cardTitle';
    titleElement.textContent = getLocalizedText(skillCategory.label, currentLang);
    skillCard.appendChild(titleElement);

    if (skillCategory.description) {
      const description = document.createElement('p');
      description.className = 'tech-stack-cardDescription';
      description.textContent = getLocalizedText(skillCategory.description, currentLang);
      skillCard.appendChild(description);
    }

    skillCategory.items.forEach(item => {
      const skillElement = document.createElement('div');
      skillElement.className = 'tech-stack-card-stack';

      const detailWrapper = document.createElement('div');
      detailWrapper.className = 'skill-details';

      const iconWrapper = document.createElement('span');
      iconWrapper.className = 'skill-icon';
      iconWrapper.innerHTML = item.image;

      const skillName = document.createElement('span');
      skillName.className = 'skillTechnologySkillName';
      skillName.textContent = getLocalizedText(item.title, currentLang);

      detailWrapper.appendChild(iconWrapper);
      detailWrapper.appendChild(skillName);
      skillElement.appendChild(detailWrapper);

      if (item.tag) {
        const tagEl = document.createElement('span');
        tagEl.className = 'skill-badge';
        tagEl.textContent = getLocalizedText(item.tag, currentLang);
        skillElement.appendChild(tagEl);
      }

      skillCard.appendChild(skillElement);
    });

    skillsContainer.appendChild(skillCard);
  });
};

const renderProjects = () => {
  const projectsContainer = document.getElementById('projectsContainer');
  if (!projectsContainer) return;
  projectsContainer.innerHTML = '';
  arrayProjects.forEach(project => {
    const card = document.createElement('div');
    card.className = 'project-card';
    card.style.cursor = 'pointer';
    card.addEventListener('click', () => window.open(project.link, '_blank'));

    const title = document.createElement('h3');
    title.className = 'project-title';
    title.textContent = getLocalizedText(project.title, currentLang);
    card.appendChild(title);

    const desc = document.createElement('p');
    desc.className = 'project-card-descripton';
    desc.textContent = getLocalizedText(project.description, currentLang);
    card.appendChild(desc);

    const buttonDiv = document.createElement('div');
    buttonDiv.className = 'project-card-button';
    buttonDiv.innerHTML = `${project.icon}<a class="project-link" href="${project.link}" target="_blank">${translations[currentLang].enter}</a>`;
    card.appendChild(buttonDiv);

    projectsContainer.appendChild(card);
  });
};

const showWithDelay = elements => {
  elements.forEach((el, idx) => {
    setTimeout(() => el.classList.add('show'), idx * 100);
  });
};

const renderServices = () => {
  const servicesContainer = document.getElementById('services-content');
  const servicesTitle = document.getElementById('services-title');
  if (!servicesContainer || !servicesTitle) return;

  const currentData = serviceContent[currentServiceMode];

  servicesTitle.textContent = getLocalizedText(currentData.title, currentLang);
  updateServiceTabs();

  servicesContainer.innerHTML = '';

  currentData.categories.forEach(category => {
    const section = document.createElement('section');
    section.className = 'service-category';

    const heading = document.createElement('h3');
    heading.className = 'service-category-title';
    heading.textContent = getLocalizedText(category.title, currentLang);
    section.appendChild(heading);

    const grid = document.createElement('div');
    grid.className = 'service-grid';

    category.items.forEach(item => {
      const card = document.createElement('article');
      card.className = 'service-card';

      const header = document.createElement('div');
      header.className = 'service-card-header';

      if (item.icon) {
        const icon = document.createElement('span');
        icon.className = 'service-card-icon';
        icon.textContent = item.icon;
        header.appendChild(icon);
      }

      const textWrap = document.createElement('div');
      textWrap.className = 'service-card-text';

      const nameEl = document.createElement('h4');
      nameEl.className = 'service-card-title';
      nameEl.textContent = getLocalizedText(item.name, currentLang);
      textWrap.appendChild(nameEl);

      if (item.details) {
        const detailEl = document.createElement('p');
        detailEl.className = 'service-card-details';
        detailEl.textContent = getLocalizedText(item.details, currentLang);
        textWrap.appendChild(detailEl);
      }

      header.appendChild(textWrap);
      card.appendChild(header);

      if (item.price) {
        const priceEl = document.createElement('span');
        priceEl.className = 'service-card-price';
        priceEl.textContent = getLocalizedText(item.price, currentLang);
        card.appendChild(priceEl);
      }

      grid.appendChild(card);
    });

    section.appendChild(grid);
    servicesContainer.appendChild(section);
  });

  if ((currentData.infoBlocks && currentData.infoBlocks.length) || currentData.contacts) {
    const infoGrid = document.createElement('div');
    infoGrid.className = 'service-info-grid';

    currentData.infoBlocks?.forEach(block => {
      const infoCard = document.createElement('article');
      infoCard.className = 'service-info-card';

      const infoTitle = document.createElement('h3');
      infoTitle.className = 'service-info-title';
      infoTitle.textContent = getLocalizedText(block.title, currentLang);
      infoCard.appendChild(infoTitle);

      if (block.items && block.items.length) {
        const list = document.createElement('ul');
        list.className = 'service-info-list';
        block.items.forEach(item => {
          const listItem = document.createElement('li');
          listItem.innerHTML = getLocalizedText(item, currentLang);
          list.appendChild(listItem);
        });
        infoCard.appendChild(list);
      }

      infoGrid.appendChild(infoCard);
    });

    if (currentData.contacts) {
      const contactCard = document.createElement('article');
      contactCard.className = 'service-info-card service-contact-card';

      const contactTitle = document.createElement('h3');
      contactTitle.className = 'service-info-title';
      contactTitle.textContent = getLocalizedText(currentData.contacts.title, currentLang);
      contactCard.appendChild(contactTitle);

      if (currentData.contacts.note) {
        const note = document.createElement('p');
        note.className = 'service-contact-note';
        note.textContent = getLocalizedText(currentData.contacts.note, currentLang);
        contactCard.appendChild(note);
      }

      const contactList = document.createElement('ul');
      contactList.className = 'service-contact-list';

      currentData.contacts.items.forEach(item => {
        const contactItem = document.createElement('li');

        const label = document.createElement('span');
        label.className = 'service-contact-label';
        label.textContent = getLocalizedText(item.label, currentLang);
        contactItem.appendChild(label);

        const link = document.createElement('a');
        link.href = item.url;
        link.target = '_blank';
        link.rel = 'noopener';
        link.textContent = item.display;
        contactItem.appendChild(link);

        contactList.appendChild(contactItem);
      });

      contactCard.appendChild(contactList);
      infoGrid.appendChild(contactCard);
    }

    servicesContainer.appendChild(infoGrid);
  }

  requestAnimationFrame(() => {
    showWithDelay(servicesContainer.querySelectorAll('.service-card'));
    showWithDelay(servicesContainer.querySelectorAll('.service-info-card'));
  });
};

const applyTranslations = lang => {
  const t = translations[lang];
  const setText = (id, text) => {
    const el = document.getElementById(id);
    if (el) el.textContent = text;
  };
  const setHTML = (id, html) => {
    const el = document.getElementById(id);
    if (el) el.innerHTML = html;
  };
  setText('greeting', t.greeting);
  setHTML('role', t.role);
  setHTML('location', t.location);
  setText('language-btn', t.languageButton);
  setText('profile-chip', t.profileChip);
  setText('profile-pill', t.profilePill);
  setText('contacts', t.contactsTitle);
  setText('wallet', t.walletTitle);
  setText('payment-label', t.paymentLabel);
  const copyBtn = document.getElementById('copy-address');
  if (copyBtn) copyBtn.textContent = t.copy;
  setText('metamask-btn', t.payMetamask);
  setText('skills-title', t.skillsTitle);
  setText('projects-title', t.projectsTitle);
  document.querySelectorAll('.project-link').forEach(el => {
    el.textContent = t.enter;
  });
  setText('projects-subheading', t.projectsSubheading);
  setText('quotes-subheading', t.quotesSubheading);
  setText('quote1', t.quote1);
  setText('quote2', t.quote2);
  setHTML('project-ai-hub', t.projectAiHub);
  setHTML('project-gitzipqr', t.projectGitZipQR);
  setText('github-view', t.githubView);
  setText('connect-title', t.connectTitle);
  setText('seo-title', t.seoTitle);
  setText('seo-text', t.seoText);
  setText('nav-profile', t.navProfile);
  setText('nav-projects', t.navProjects);
  const footer = document.querySelector('.footer');
  if (footer) {
    footer.innerHTML = `&copy; <span id="year"></span> Daniil [RestlessByte]. <span id="footer-text">${t.footer}</span>`;
    const yearEl = document.getElementById('year');
    if (yearEl) yearEl.textContent = new Date().getFullYear();
  }
};

const initPage = () => {
  const yearEl = document.getElementById('year');
  if (yearEl) yearEl.textContent = new Date().getFullYear();
  renderSkills();
  renderProjects();
  renderServices();
  applyTranslations(currentLang);

  document.getElementById('language-btn').addEventListener('click', () => {
    document.getElementById('language-popup').classList.toggle('open');
  });

  document.querySelectorAll('.lang-option').forEach(btn => {
    btn.addEventListener('click', () => {
      currentLang = btn.getAttribute('data-lang');
      renderSkills();
      renderProjects();
      renderServices();
      applyTranslations(currentLang);
      showWithDelay(document.querySelectorAll('.tech-stack-card'));
      showWithDelay(document.querySelectorAll('.project-card'));
      document.getElementById('language-popup').classList.remove('open');
    });
  });

  const copyBtn = document.getElementById('copy-address');
  const addrEl = document.getElementById('usdt-address');
  const metaBtn = document.getElementById('metamask-btn');
  if (copyBtn && addrEl) {
    const address = addrEl.textContent.trim();
    copyBtn.addEventListener('click', () => {
      navigator.clipboard.writeText(address);
      copyBtn.textContent = translations[currentLang].copied;
      copyBtn.classList.add('copied');
      setTimeout(() => {
        copyBtn.textContent = translations[currentLang].copy;
        copyBtn.classList.remove('copied');
      }, 2000);
    });
  }
  if (metaBtn && addrEl) {
    metaBtn.addEventListener('click', async () => {
      if (!window.ethereum) {
        alert('MetaMask not detected');
        return;
      }
      try {
        const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' });
        const amount = prompt('Amount of USDT to send:', '1');
        if (!amount) return;
        const value = BigInt(Math.round(parseFloat(amount) * 1e6)).toString(16).padStart(64, '0');
        const receiver = addrEl.textContent.trim().slice(2).padStart(64, '0');
        const data = '0xa9059cbb' + receiver + value;
        await window.ethereum.request({
          method: 'eth_sendTransaction',
          params: [{
            from: account,
            to: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            data
          }]
        });
      } catch (err) {
        console.error(err);
      }
    });
  } else if (metaBtn) {
    metaBtn.style.display = 'none';
  }
};

document.addEventListener('DOMContentLoaded', initPage);

window.addEventListener('load', () => {
  const loader = document.getElementById('loader');
  const main = document.getElementById('main-content');
  if (loader) {
    loader.classList.add('fade-out');
    setTimeout(() => (loader.style.display = 'none'), 500);
  }
  if (main) {
    main.classList.remove('hidden');
    main.classList.add('fade-in');
  }
  showWithDelay(document.querySelectorAll('.tech-stack-card'));
  showWithDelay(document.querySelectorAll('.project-card'));
});

